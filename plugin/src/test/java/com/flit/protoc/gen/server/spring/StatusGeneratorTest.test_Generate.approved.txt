[0] = package com.example.helloworld;

public interface RpcStatus {
  StatusOuterClass.StatusResponse handleGetStatus(Core.Empty in);
}

[1] = package com.example.helloworld;

import com.google.protobuf.util.JsonFormat;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.InputStreamReader;
import java.lang.Exception;
import java.nio.charset.StandardCharsets;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class RpcStatusController {
  @Autowired
  private RpcStatus service;

  @PostMapping("/twirp/com.example.helloworld.Status/GetStatus")
  public void handleGetStatus(HttpServletRequest request, HttpServletResponse response) throws
      Exception {
    boolean json = false;
    final Core.Empty data;
    if (request.getContentType().equals("application/protobuf")) {
      data = Core.Empty.parseFrom(request.getInputStream());
    } else if (request.getContentType().startsWith("application/json")) {
      json = true;
      Core.Empty.Builder builder = Core.Empty.newBuilder();
      try (InputStreamReader reader = new InputStreamReader(request.getInputStream(), StandardCharsets.UTF_8)) {
        JsonFormat.parser().merge(reader, builder);
      }
      data = builder.build();
    } else {
      response.setStatus(415);
      return;
    }
    StatusOuterClass.StatusResponse retval = service.handleGetStatus(data);
    response.setStatus(200);
    if (json) {
      response.setContentType("application/json; charset=utf-8");
      response.getOutputStream().write(JsonFormat.printer().omittingInsignificantWhitespace().print(retval).getBytes(StandardCharsets.UTF_8));
    } else {
      response.setContentType("application/protobuf");
      retval.writeTo(response.getOutputStream());
    }
  }
}

